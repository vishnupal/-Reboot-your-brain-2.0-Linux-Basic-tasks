Problem #1     Block System call : 


    block system call for date command 
    that means you don't have to uninstall date command but if you run kernel must not accept 
    do the same Firefox as well
Answer #1 -> 
root@vishnu:~# which date
/usr/bin/date
root@vishnu:~# chmod 000 /usr/bin/date
root@vishnu:~# ls -l /usr/bin/date
---------- 1 root root 109408 Leq  7  2019 /usr/bin/date
root@vishnu:~# date
bash: /usr/bin/date: Permission denied
root@vishnu:~#

root@vishnu:~# which firefox
/usr/bin/firefox
root@vishnu:~# chmod 000 /usr/bin/firefox
root@vishnu:~# firefox
bash: /usr/bin/firefox: Permission denied
root@vishnu:~# 



Problem #2 :  play with directory 

      create a directory without name from command line
      create a directory with name "-okgoogle"
Answer #1.a
root@vishnu:/vv/Test# mkdir -
root@vishnu:/vv/Test# ls -l
total 4
drwxr-xr-x 2 root root 4096 Qas 27 23:58 -

 


Answer #2.b 
# when i direct create directory then give me below error 
root@vishnu:/vv/Test# mkdir -okgoogle
mkdir: invalid option -- 'o'
Try 'mkdir --help' for more information.
#so here my current directory is Test so try this below command so ../ go back and create "-okgoogle" in my same Test directory

root@vishnu:/vv/Test# mkdir ../Test/-okgoogle
root@vishnu:/vv/Test# ls -l
total 8
drwxr-xr-x 2 root root 4096 Qas 27 23:58 -
drwxr-xr-x 2 root root 4096 Qas 28 00:00 -okgoogle
root@vishnu:/vv/Test# 

Problem #3 create directory structure 
Answer 3
root@vishnu:/vv/Test# mkdir -p A/{B/{G/K/Reboot.txt,H/J},C/{I,J/L},D/{F,E/M}} ;ln -s /vv/Test/A/B/G/K/Reboot.txt /vv/Test/A/B/H/J ;ln -s /vv/Test/A/B/G/K/Reboot.txt /vv/Test/A/C/J/L;ln -s /vv/Test/A/B/G/K/Reboot.txt /vv/Test/A/D/E/M ;ln -s /vv/Test/A/B/H/J /vv/Test/A/C/I/ ; ln -s /vv/Test/A/C/J/L /vv/Test/A/D/F/
root@vishnu:/vv/Test# tree A
A
├── B
│   ├── G
│   │   └── K
│   │       └── Reboot.txt
│   └── H
│       └── J
│           └── Reboot.txt -> /vv/Test/A/B/G/K/Reboot.txt
├── C
│   ├── I
│   │   └── J -> /vv/Test/A/B/H/J
│   └── J
│       └── L
│           └── Reboot.txt -> /vv/Test/A/B/G/K/Reboot.txt
└── D
    ├── E
    │   └── M
    │       └── Reboot.txt -> /vv/Test/A/B/G/K/Reboot.txt
    └── F
        └── L -> /vv/Test/A/C/J/L

19 directories, 0 files
root@vishnu:/vv/Test# 







Problem 5:

     create  3 files named   abc.txt  ok  fine  g.txt  /tmp directory 
      create  4  directories   aa aaa aaaa  under  /tmp directory 
      give ls command to  list the content of  /tmp directory 
      make sure it will only list the content (file|directory)  having 2 char in their name.

here i miss misinterpret question:
/*
root@vishnu:~# cd /tmp/ ;touch abc.txt ok fine g.txt
root@vishnu:/tmp# mkdir aa aaa aaaa
root@vishnu:/tmp# ls |awk '{print substr($0,1,2)}'
aa
aa
aa
ab
fi
g.
ok
*/

#Answer 5:

for list only that having 2 char in their name. so i use ls with Wildcards so "?" is represent a single char.
root@vishnu:~# cd /tmp/ ;touch abc.txt ok fine g.txt
root@vishnu:/tmp# mkdir aa aaa aaaa
root@vishnu:/tmp# ls -dl ??
drwxr-xr-x 2 root root 4096 Jul  2 16:26 aa
-rw-r--r-- 1 root root    0 Jul  2 16:27 ok

for learning more about wildcards plz visit `https://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm` 

Problem 6:

here i use nohup command it is save the output in the nohup.out file 

root@vishnu:/vv/Test# nohup ls
nohup: ignoring input and appending output to 'nohup.out'
root@vishnu:/vv/Test# nohup date
nohup: ignoring input and appending output to 'nohup.out'
root@vishnu:/vv/Test# cat nohup.out 
nohup.out
Thu 02 Jul 2020 04:19:12 PM IST
root@vishnu:/vv/Test# 

problem #7 :    create a shell script 

     create a shell script named /root/delvex.sh 
     make sure it will run /bin/sh shell 
     a user will be running this script my using a command name opensource
     when a user  run like  "opensource  time" it must give current time only
     when it runs like "opensource user"  it will give list of interactive shell users only
     when run like "opensource 100"  it must print "Hello Delvex" 100 times in interval of 1 sec
     if runs like  "opensource windows"  then it must shutdown OS
     if run opensource command without any parameter  then it must show out --

             i)   name of kernel 
             ii)   version of kernel 
             iii)  current date in the format of  /DD/MM/YY
             iv)  name of OS 
             v)   last reboot time 
 
 Note:    each output for last option must be in a separate line   


Answer 7:
root@vishnu:~# opensource -h  
                                                     
  ___  _ __   ___ _ __  ___  ___  _   _ _ __ ___ ___ 
 / _ \| '_ \ / _ \ '_ \/ __|/ _ \| | | | '__/ __/ _ \
| (_) | |_) |  __/ | | \__ \ (_) | |_| | | | (_|  __/
 \___/| .__/ \___|_| |_|___/\___/ \__,_|_|  \___\___|
      |_|                                            
----------------------------------
Usage: opensource [OPTION] 
ALL the option for opensource command 
time            curent time
100             print Hello delvex 100 times in interval of 1 sec.
windows         shutdown os 
----------------------------------
root@vishnu:~# opensource 10  -> here i use 10 for demo 
Hello Delvex
Hello Delvex
Hello Delvex
Hello Delvex
Hello Delvex
Hello Delvex
Hello Delvex
Hello Delvex
Hello Delvex
Hello Delvex
root@vishnu:~# opensource time
current time : 21:36:07
root@vishnu:~# opensource 
Name of kernel : Linux
Version of kernel : 5.4.0-kali2-amd64
Current date : 07/07/20
Name of OS  : GNU/Linux
Last reboot time : Tue Jul 7 20:33
root@vishnu:~# opensource -h 4
Plz enter valid input 
root@vishnu:~# opensource 454
Plz enter vaild option
root@vishnu:~# 
root@vishnu:~# cat /usr/bin/opensource 
#!/bin/sh

if [ $# -gt 1 ];
then

echo "Plz enter valid input "
exit 1
fi
if [ "$1" = "-h" ];then
figlet opensource
echo "----------------------------------"
echo "Usage: opensource [OPTION] "
echo "ALL the option for opensource command "
echo "time            curent time"
echo "100             print Hello delvex 100 times in interval of 1 sec."
echo "windows         shutdown os "
echo "----------------------------------"
fi
/root/delvex.sh $1
root@vishnu:~# cat delvex.sh 
#!/bin/sh

if [ $# -eq 0 ];
then
echo "Name of kernel : $(uname)"
echo "Version of kernel : $(uname -r)"
echo "Current date : `date +%d`/`date +%m`/`date +%y`"
echo "Name of OS  : $(uname -o)"
echo "Last reboot time : `last reboot | awk -F " " 'NR==1{print $5,$6,$7, $8 }'`"
fi
if [ $1 = "time" ];then
        echo "current time : $(date +%T)"
        fi

if [ $1 = 10 ];then 
x=1
while [ $x -le 10 ]
do
echo "Hello Delvex"
sleep 1
 x=$(( $x + 1 ))
done
fi

if [ $1 = "windows" ];then
shutdown now
else
echo "Plz enter vaild option"
fi




